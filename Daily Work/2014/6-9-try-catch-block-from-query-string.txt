        public ClassSearchObj FromQuerystring(NameValueCollection queryString)
        {
            var search = new ClassSearchObj();
            foreach (var prop in GetType().GetProperties())
            {
                //Check to see if the property has an associated QueryStringParameter, if not skip it.
                var attr = Attribute.GetCustomAttribute(prop, typeof(QueryStringParameter)) as QueryStringParameter;
                if (attr == null)
                    continue;

                //See if this parameter is available in the querystring, if not skip it.
                var value = queryString[attr.Name];
                if (value == null) continue;

                try
                {
                    //We have a property with a specified attribute in the querystring.
                    prop.SetValue(search, Convert.ChangeType(value, prop.PropertyType));
                }
                catch (InvalidCastException)
                {
                    //Nullable ints tend to cause this exception, so attempt to parse them 
                    //as an int and if it succeeds set the value with the parsed int.
                    int parsedInt;
                    if(Int32.TryParse(value, out parsedInt))
                    {
                        prop.SetValue(search, parsedInt);
                    }
                }
            }
            return search;
        }